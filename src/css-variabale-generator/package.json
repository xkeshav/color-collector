{
  "name": "css-variable-generator",
  "displayName": "css variable generator",
  "description": "collect all css color property and collect under :root as a variable and use that variable in place of color code in a css file.",
  "version": "0.0.1",
  "publisher": "xkeshav",
  "engines": {
    "vscode": "^1.74.0"
  },
  "repository": "https://github.com/xkeshav/parixan.git",
  "keywords": [
    "cssVariableGenerator",
    "css variable collector",
    "css variables"
  ],
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onCommand:css-variable-generator.init",
    "onLanguage:css",
    "workspaceContains:**/*.css"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "css-variable-generator.init",
        "category": "cvg",
        "title": "Find CSS"
      }
    ],
    "configuration": {
      "title": "Css Variable Generator",
      "properties": {
        "cssVariableGenerator.collectCssVariables": {
          "type": "boolean",
          "default": false,
          "description": "collect css variables from this CSS file."
        },
        "cssVariableGenerator.lookupFiles": {
          "type": "array",
          "default": [
            "**/*.css"
          ],
          "description": "extension list from where to collect."
        }
      }
    },
    "keybindings": [
      {
        "command": "css-variable-generator.init",
        "key": "ctrl+f1",
        "mac": "cmd+f1",
        "when": "editorTextFocus"
      }
    ],
    "languages": [
      {
        "id": "css",
        "extensions": [
          ".css"
        ],
        "aliases": [
          "CSS",
          "css"
        ],
        "mimetypes": [
          "text/css"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "css-variable-generator.init",
          "when": "editorLangId == css"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.3",
    "@vscode/test-electron": "^2.2.0"
  }
}
